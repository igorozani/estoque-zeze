<title>Relatórios</title>  
<main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
        <h1 class="h3">Relatórios</h1>
        
    </div>

    
    {{!-- primeira tabela --}}
    <div class="card mb-4">
        <div class="table-responsive card-body">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 ">
                <h5 class="font-weight-light">Lucro</h5>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group mr-2">
                        <button type="button" class="btn btn-sm btn-outline-secondary">Share</button>
                        <button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
                    </div>
                    <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
                        <span data-feather="calendar"></span>
                        This week
                    </button>
                </div>
            </div>  
            {{#each erros}}
                <div class="alert alert-danger">{{texto}}</div>
            {{/each}}
            {{>_msg}}

            <div class="container">
                <canvas id="myChart" style="display: block; width: 1000px; height: 300px;" width="1000" height="300" class="chartjs-render-monitor"></canvas>
            </div>
        </div>
    </div>

    {{!-- segunda tabela --}}
    <div class="card">
        <div class="table-responsive card-body">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 ">
                <h5 class="font-weight-light">Devedores</h5>
            </div>  

            {{!-- busca --}}
            <span class="algolia-autocomplete mb-4" style="position: relative; display: inline-block; direction: ltr;">
                <input type="text" class="form-control ds-input" id="search-input" placeholder="Busca..." aria-label="Search for..."
                    autocomplete="off" data-docs-version="4.4" spellcheck="false" role="combobox" aria-autocomplete="list"
                    aria-expanded="false" aria-owns="algolia-autocomplete-listbox-0" dir="auto"
                    style="position: relative; vertical-align: top;">
            </span>

            <table class="table table-striped table-sm">
                <thead>
                    <tr>
                        <th>
                            Cliente
                            <a href="javascript:void(0);" onclick="sortColumn('nome')" style="float:right;" class="color-order">
                                <svg class="bi bi-arrow-up-down" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M11 3.5a.5.5 0 01.5.5v9a.5.5 0 01-1 0V4a.5.5 0 01.5-.5z" clip-rule="evenodd"/>
                                    <path fill-rule="evenodd" d="M10.646 2.646a.5.5 0 01.708 0l3 3a.5.5 0 01-.708.708L11 3.707 8.354 6.354a.5.5 0 11-.708-.708l3-3zm-9 7a.5.5 0 01.708 0L5 12.293l2.646-2.647a.5.5 0 11.708.708l-3 3a.5.5 0 01-.708 0l-3-3a.5.5 0 010-.708z" clip-rule="evenodd"/>
                                    <path fill-rule="evenodd" d="M5 2.5a.5.5 0 01.5.5v9a.5.5 0 01-1 0V3a.5.5 0 01.5-.5z" clip-rule="evenodd"/>
                                </svg>
                            </a>
                        </th>
                        <th>
                            Valor de compras total 
                            <a href="javascript:void(0);" onclick="sortColumn('valorTotal')" style="float:right;" class="color-order">
                                <svg class="bi bi-arrow-up-down" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M11 3.5a.5.5 0 01.5.5v9a.5.5 0 01-1 0V4a.5.5 0 01.5-.5z" clip-rule="evenodd"/>
                                    <path fill-rule="evenodd" d="M10.646 2.646a.5.5 0 01.708 0l3 3a.5.5 0 01-.708.708L11 3.707 8.354 6.354a.5.5 0 11-.708-.708l3-3zm-9 7a.5.5 0 01.708 0L5 12.293l2.646-2.647a.5.5 0 11.708.708l-3 3a.5.5 0 01-.708 0l-3-3a.5.5 0 010-.708z" clip-rule="evenodd"/>
                                    <path fill-rule="evenodd" d="M5 2.5a.5.5 0 01.5.5v9a.5.5 0 01-1 0V3a.5.5 0 01.5-.5z" clip-rule="evenodd"/>
                                </svg>
                            </a>
                        </th>
                        <th>
                            Valor restante à ser pago
                            <a href="javascript:void(0);" onclick="sortColumn('valorRestante')" style="float:right;" class="color-order">
                                <svg class="bi bi-arrow-up-down" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M11 3.5a.5.5 0 01.5.5v9a.5.5 0 01-1 0V4a.5.5 0 01.5-.5z" clip-rule="evenodd"/>
                                    <path fill-rule="evenodd" d="M10.646 2.646a.5.5 0 01.708 0l3 3a.5.5 0 01-.708.708L11 3.707 8.354 6.354a.5.5 0 11-.708-.708l3-3zm-9 7a.5.5 0 01.708 0L5 12.293l2.646-2.647a.5.5 0 11.708.708l-3 3a.5.5 0 01-.708 0l-3-3a.5.5 0 010-.708z" clip-rule="evenodd"/>
                                    <path fill-rule="evenodd" d="M5 2.5a.5.5 0 01.5.5v9a.5.5 0 01-1 0V3a.5.5 0 01.5-.5z" clip-rule="evenodd"/>
                                </svg>
                            </a>
                        </th>
                        <th>
                            Ação
                        </th>
                    </tr>
                </thead>
                <tbody id="tableData"></tbody>
            </table>
        </div>
    </div>


    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"></script>
    <script src="js/buscaRelatorio.js"></script>
    <script>
        let sortDirection = false;
        let aList = []

        {{#each clientes}}
        aList.push({
            nome: '{{nome}}',
            valorTotal: '{{valorTotal}}',
            valorRestante: '{{valorRestante}}',
            _id: '{{_id}}'
            });
        {{else}}
        {{/each}}

        loadTableData(aList)

        function formata(n){
            return n.replace('.', ",").replace(/\B(?=(\d{3})+(?!\d))/g, ".")                 
        }

        function loadTableData(aList){
            const tableBody = document.getElementById('tableData')
            let dataHtml = ``
            if(aList == ""){ 
                dataHtml = 
                `
                    <tr align="center">
                        <td colspan="4" class="bg-light">Nenhum dado a ser exibido</td>
                    </tr>  
                `
            } else {
                for(let cliente of aList){
                    if(cliente.valorRestante < 0) { cliente.valorRestante = 0 }
                    cliente.valorRestante = Number(cliente.valorRestante)
                    cliente.valorRestante = cliente.valorRestante.toFixed(2)
                    
                    // se o cliente esta devendo
                    if(cliente.valorRestante > 0){
                        var valorRestante = formata(cliente.valorRestante)
                        var valorTotal = formata(cliente.valorTotal)
                        dataHtml += 
                            `
                                <tr id="tr-tabela" height="40">
                                    <td id="tdNome">${cliente.nome}</td>
                                    <td>R$ ${valorTotal}</td>
                                    <td class="text-danger">R$ ${valorRestante}</td>
                                    <td>
                                        <a href="/clientes/${cliente._id}">
                                            <button class="btn btn-sm btn-outline-success">Ver detalhes</button>
                                        </a>
                                    </td>
                                </tr>
                            `;
                    // se o cliente esta sem dívidas
                    } else {
                        var valorRestante = formata(cliente.valorRestante)
                        var valorTotal = formata(cliente.valorTotal)
                        dataHtml += 
                            `
                                <tr id="tr-tabela" height="40">
                                    <td id="tdNome">${cliente.nome}</td>
                                    <td>R$ ${valorTotal}</td>
                                    <td class="text-success">R$ ${valorRestante}</td>
                                    <td>
                                        <a href="/clientes/${cliente._id}">
                                            <button class="btn btn-sm btn-outline-success">Ver detalhes</button>
                                        </a>
                                    </td>
                                </tr>
                            `;
                    }
                }
                dataHtml += 
                    `
                        <tr id="semDados" align="center" class="invisivel">
                            <td colspan="4" class="bg-light">Nenhum dado a ser exibido</td>
                        </tr>  
                    `
            }
            tableBody.innerHTML = dataHtml;
        }

        function sortColumn(columnName) {
            sortDirection = !sortDirection
            switch(columnName) {
                case 'nome':
                    sortStringColumn(sortDirection, columnName)
                    break
                case 'valorTotal':
                    sortNumberColumn(sortDirection, columnName)
                    break
                case 'valorRestante':
                    sortNumberColumn(sortDirection, columnName)
                    break
            }
            loadTableData(aList)
        }

        function sortNumberColumn(sort, columnName){
            aList = aList.sort((p1, p2) => {
                return sort ? p1[columnName] - p2[columnName] : p2[columnName] - p1[columnName]
            })
        }

        function sortStringColumn(sort, columnName) {
            function compare(a, b) {
            // Use toUpperCase() to ignore character casing
            const pA = a[columnName].toUpperCase();
            const pB = b[columnName].toUpperCase();

            let comparison = 0;
            if (pA > pB) {
                comparison = 1;
            } else if (pA < pB) {
                comparison = -1;
            }
            return sort ? comparison : comparison * -1
            }

            aList.sort(compare)
        }

        function sortDateColumn(sort, columnName){
            aList.sort(function(a, b) {
                console.log(a[columnName])
                var dateA = new Date(a[columnName]), dateB = new Date(b[columnName]);
                return sort ? dateA - dateB : dateB - dateA
            })
        }
    </script>

    <script>
    let ctx = document.getElementById('myChart').getContext('2d');
    let arrayLucros = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    let data 
    
    {{#each produtosVendidos}}
        data = new Date('{{dataVend}}')
        switch(data.getMonth() + 1) {
                case 1:
                    arrayLucros[0] += {{lucro}}
                    break
                case 2:
                    arrayLucros[1] += {{lucro}}
                    break
                case 3:
                    arrayLucros[2] += {{lucro}}
                    break
                case 4:
                    arrayLucros[3] += {{lucro}}
                    break
                case 5:
                    arrayLucros[4] += {{lucro}}
                    break
                case 6:
                    arrayLucros[5] += {{lucro}}
                    break
                case 7:
                    arrayLucros[6] += {{lucro}}
                    break
                case 8:
                    arrayLucros[7] += {{lucro}}
                    break
                case 9:
                    arrayLucros[8] += {{lucro}}
                    break
                case 10:
                    arrayLucros[9] += {{lucro}}
                    break
                case 11:
                    arrayLucros[10] += {{lucro}}
                    break
                case 12:
                    arrayLucros[11] += {{lucro}}
                    break
            }
    {{/each}}
    arrayLucros[0] = arrayLucros[0].toFixed(2)
    arrayLucros[1] = arrayLucros[1].toFixed(2)
    arrayLucros[2] = arrayLucros[2].toFixed(2)
    arrayLucros[3] = arrayLucros[3].toFixed(2)
    arrayLucros[4] = arrayLucros[4].toFixed(2)
    arrayLucros[5] = arrayLucros[5].toFixed(2)
    arrayLucros[6] = arrayLucros[6].toFixed(2)
    arrayLucros[7] = arrayLucros[7].toFixed(2)
    arrayLucros[8] = arrayLucros[8].toFixed(2)
    arrayLucros[9] = arrayLucros[9].toFixed(2)
    arrayLucros[10] = arrayLucros[10].toFixed(2)
    arrayLucros[11] = arrayLucros[11].toFixed(2)
    

    
    var myChart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
        datasets: [{
            label: 'Lucro por mês (em reais)',
            data: arrayLucros,
            backgroundColor: 'rgba(0, 153, 51, 0.5)',
            borderColor: 'rgba(0, 153, 51, 1)',
            borderWidth: 1.5
        }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        },
    },
    responsive: true,
    maintainAspectRatio: false,
    
});
</script>
</main>
